import streamlit as st
import subprocess
from typing import List, Dict

st.title("Busca e Sele√ß√£o de Tags Musicais")

# --- Configura√ß√£o inicial ---
if 'busca' not in st.session_state:
    st.session_state.busca = ""

# --- Barra de pesquisa ---
def update_busca():
    st.session_state.busca = st.session_state.autocomplete_input

busca = st.text_input(
    "üîç Pesquisar:", 
    value=st.session_state.busca, 
    key="autocomplete_input",
    on_change=update_busca
)

# --- Dados das categorias ---
CATEGORIAS = {
    "G√™neros": [
        "Pop", "Rock", "Hip Hop", "R&B", "Jazz", "Blues", "Country", "EDM",
        "Reggae", "Classical", "Metal", "Punk", "Funk", "Soul", "Disco", "House",
        "Techno", "Trance", "Dubstep", "Gospel", "Latin", "K-Pop", "J-Pop",
        "Afrobeat", "Dancehall", "Trap", "Ska", "Bluegrass", "Folk", "Ambient",
        "Synthwave", "Industrial", "Indie Rock", "Alternative Rock",
        "Progressive Rock", "Hard Rock", "Grunge", "Emo", "Pop Punk",
        "Hardcore Punk", "Post-Punk", "New Wave", "Alternative", "Lo-fi",
        "Chillout", "Drum and Bass", "Acid Jazz", "Latin Pop", "Mariachi",
        "Salsa", "Bachata", "Tango", "Flamenco", "Bossa Nova", "Neo-Soul",
        "Trip Hop", "Contemporary R&B", "Christian Rock", "Gothic Rock",
        "Psychedelic Rock", "Nu Metal", "Emo Pop", "Ska Punk", "outro"
    ],
    "Instrumentos": [
        "Cordas", "Viol√£o", "Violoncelo", "Violino", "Viola", "Viola caipira",
        "Cavaquinho", "Ukulele", "Guitarra", "Contrabaixo ac√∫stico",
        "Baixo el√©trico", "Bandolim", "Banjo",
        "Percuss√£o", "Bateria", "Cajon", "Pandeiro", "Cuica", "Cowbell",
        "Chocalho", "Tri√¢ngulo", "Recoreco", "Beatbox", "Percuss√£o digital",
        "Zabumba",
        "Saxofone", "Flauta", "Clarinete",
        "Trombone", "Trompete", "Trompa", "Corneta", "Tuba", "Sousafone",
        "√ìrg√£o", "Teclado", "Piano", "Sintetizador", "outro"
    ],
    "Variedades": [
        "Vocal Masculino", "Vocal Feminino", "Sem vocal", "Chorus",
        "Gang vocals", "Quartet vocals", "Harmonias vocais", "Dueto", "Trio",
        "Low range", "Mid range", "High range", "Acapella",
        "Fast pace", "Slow pace",
        "Calma", "Intensa",
        "Carregada", "Minimalista",
        "Banda", "Artista solo", "Dupla", "Quarteto", "Big band",
        "Orquestra",
        "Feliz", "Triste", "√âpica", "Odiosa", "Rom√¢ntica", "Com√©dia",
        "Cr√≠tica", "Ambiente",
        "50s e antes", "60s", "70s", "80s", "90s", "2000s", "2010s", "2020s", "outro"
    ]
}

# --- Gerenciamento das sele√ß√µes ---
selected_items = {categoria: [] for categoria in CATEGORIAS}

for categoria, itens in CATEGORIAS.items():
    with st.expander(f"üéµ {categoria}" if categoria == "G√™neros" else 
                    f"ü•Å {categoria}" if categoria == "Instrumentos" else 
                    f"üé® {categoria}"):
        for i, item in enumerate(itens):
            if st.checkbox(item, key=f"{categoria}_{i}"):
                selected_items[categoria].append(i)

# --- Exibi√ß√£o dos resultados selecionados ---
st.markdown("---")
st.write("**üîé Texto pesquisado:**", st.session_state.busca or "_(vazio)_")
for categoria in CATEGORIAS:
    selected_names = [CATEGORIAS[categoria][i] for i in selected_items[categoria]]
    st.write(f"**‚úîÔ∏è {categoria} escolhidos:**", ", ".join(selected_names) or "_nenhum_")

# --- Exibi√ß√£o dos resultados finais quando houver busca ---
if st.session_state.busca:
    linhas = []
    try:
        mask_generos = sum(1 << idx for idx in selected_items["G√™neros"])
        mask_instrumentos = sum(1 << idx for idx in selected_items["Instrumentos"])
        mask_variedades = sum(1 << idx for idx in selected_items["Variedades"])
        
        args = [
            "./auto", "buscar", st.session_state.busca,
            str(mask_generos), str(mask_instrumentos), str(mask_variedades)
        ]
        res = subprocess.run(args, capture_output=True, text=True, check=True)
        linhas = res.stdout.strip().splitlines()
    except subprocess.CalledProcessError as e:
        st.error(f"Erro ao executar ./auto:\n{e.stderr}")

    if linhas:
        st.markdown("## üé∂ Resultados encontrados")
        for i in range(0, len(linhas), 3):
            if i + 2 < len(linhas):
                musica = linhas[i]
                artista = linhas[i+1]
                album = linhas[i+2]
                st.markdown(f"**{musica}**")
                st.write(f"- Artista: {artista}")
                st.write(f"- √Ålbum: {album}")
                st.markdown("---")
