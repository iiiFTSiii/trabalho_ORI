import streamlit as st
import re
import subprocess

def validar_texto(texto):
    """Valida se o texto cont√©m apenas letras e espa√ßos"""
    return bool(re.match("^[a-zA-Z√Ä-√ø ]+$", texto))

def calcular_mascara_tags(tags_selecionadas, todas_tags):
    """Converte tags selecionadas em m√°scara de bits"""
    mascara = 0
    for tag in tags_selecionadas:
        if tag in todas_tags:
            mascara |= 1 << todas_tags.index(tag)
    return mascara

st.title("üéµ Inserir Nova M√∫sica no Banco de Dados")

# Formul√°rio de inser√ß√£o
with st.form("form_inserir_musica", clear_on_submit=True):
    st.subheader("Informa√ß√µes B√°sicas")
    
    # Campos de texto
    nome_musica = st.text_input("Nome da M√∫sica*", max_chars=100).strip()
    nome_artista = st.text_input("Nome do Artista*", max_chars=100).strip()
    nome_album = st.text_input("Nome do √Ålbum", max_chars=100).strip()
    
    # Divisor visual
    st.markdown("---")
    st.subheader("Sele√ß√£o de Tags")
    
    # Categorias de tags (deve bater com a estrutura do seu programa C++)
    CATEGORIAS = {
        "G√™neros": [
            "Pop", "Rock", "Hip Hop", "R&B", "Jazz", "Blues", "Country", "EDM",
            "Reggae", "Classical", "Metal", "Punk", "Funk", "Soul", "Disco", "House",
            "Techno", "Trance", "Dubstep", "Gospel", "Latin", "K-Pop", "J-Pop",
            "Afrobeat", "Dancehall", "Trap", "Ska", "Bluegrass", "Folk", "Ambient",
            "Synthwave", "Industrial", "Indie Rock", "Alternative Rock",
            "Progressive Rock", "Hard Rock", "Grunge", "Emo", "Pop Punk",
            "Hardcore Punk", "Post-Punk", "New Wave", "Alternative", "Lo-fi",
            "Chillout", "Drum and Bass", "Acid Jazz", "Latin Pop", "Mariachi",
            "Salsa", "Bachata", "Tango", "Flamenco", "Bossa Nova", "Neo-Soul",
            "Trip Hop", "Contemporary R&B", "Christian Rock", "Gothic Rock",
            "Psychedelic Rock", "Nu Metal", "Emo Pop", "Ska Punk", "Blue-eyed Soul"
        ],
        "Instrumentos": [
            "Cordas", "Viol√£o", "Violoncelo", "Violino", "Viola", "Viola caipira",
            "Cavaquinho", "Ukulele", "Guitarra", "Contrabaixo ac√∫stico",
            "Baixo el√©trico", "Bandolim", "Banjo",
            "Percuss√£o", "Bateria", "Cajon", "Pandeiro", "Cuica", "Cowbell",
            "Chocalho", "Tri√¢ngulo", "Recoreco", "Beatbox", "Percuss√£o digital",
            "Zabumba",
            "Saxofone", "Flauta", "Clarinete",
            "Trombone", "Trompete", "Trompa", "Corneta", "Tuba", "Sousafone",
            "√ìrg√£o", "Teclado", "Piano", "Sintetizador", "Acorde√£o"
        ],
        "Variedades": [
            "Vocal Masculino", "Vocal Feminino", "Sem vocal", "Chorus",
            "Gang vocals", "Quartet vocals", "Harmonias vocais", "Dueto", "Trio",
            "Low range", "Mid range", "High range", "Acapella",
            "Fast pace", "Slow pace",
            "Calma", "Intensa",
            "Carregada", "Minimalista",
            "Banda", "Artista solo", "Dupla", "Quarteto", "Big band",
            "Orquestra",
            "Feliz", "Triste", "√âpica", "Odiosa", "Rom√¢ntica", "Com√©dia",
            "Cr√≠tica", "Ambiente",
            "50s e antes", "60s", "70s", "80s", "90s", "2000s", "2010s", "2020s"
        ]
    }
    
    # Checkboxes para cada categoria
    tags_selecionadas = {categoria: [] for categoria in CATEGORIAS}
    for categoria, tags in CATEGORIAS.items():
        with st.expander(f"üéµ {categoria}" if categoria == "G√™neros" else 
                        f"ü•Å {categoria}" if categoria == "Instrumentos" else 
                        f"üé® {categoria}"):
            for tag in tags:
                if st.checkbox(tag, key=f"inserir_{categoria}_{tag}"):
                    tags_selecionadas[categoria].append(tag)
    
    # Bot√£o de submiss√£o
    submitted = st.form_submit_button("Inserir M√∫sica")
    
    if submitted:
        # Valida√ß√£o dos campos
        erros = []
        if not nome_musica:
            erros.append("Nome da m√∫sica √© obrigat√≥rio")
        if not nome_artista:
            erros.append("Nome do artista √© obrigat√≥rio")
        
        for campo, valor in [("M√∫sica", nome_musica), ("Artista", nome_artista), ("√Ålbum", nome_album)]:
            if valor and not validar_texto(valor):
                erros.append(f"{campo} cont√©m caracteres inv√°lidos (use apenas letras e espa√ßos)")
        
        if erros:
            for erro in erros:
                st.error(erro)
        else:
            try:
                # Calcular m√°scaras de bits para cada categoria
                mask_generos = calcular_mascara_tags(tags_selecionadas["G√™neros"], CATEGORIAS["G√™neros"])
                mask_instrumentos = calcular_mascara_tags(tags_selecionadas["Instrumentos"], CATEGORIAS["Instrumentos"])
                mask_variedades = calcular_mascara_tags(tags_selecionadas["Variedades"], CATEGORIAS["Variedades"])
                
                # Chamar o programa auto
                args = [
                    "./auto", "inserir",
                    nome_musica,
                    nome_artista,
                    nome_album if nome_album else "",  # Envia vazio se n√£o tiver √°lbum
                    str(mask_generos),
                    str(mask_instrumentos),
                    str(mask_variedades)
                ]
                
                # Executar o comando
                resultado = subprocess.run(args, check=True, capture_output=True, text=True)
                
                if resultado.returncode == 0:
                    st.success("‚úÖ M√∫sica inserida com sucesso!")
                    st.code(f"Comando executado:\n{' '.join(args)}")
                    st.code(f"Sa√≠da do programa:\n{resultado.stdout}")
                else:
                    st.error(f"Erro ao inserir m√∫sica:\n{resultado.stderr}")
            
            except subprocess.CalledProcessError as e:
                st.error(f"Falha ao executar o programa auto:\n{e.stderr}")
            except Exception as e:
                st.error(f"Erro inesperado: {str(e)}")  # Corrigido aqui - f-string terminada corretamente
